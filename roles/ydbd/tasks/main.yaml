- name: check if required variables are defined
  ansible.builtin.assert:
    that:
      - "{{ item }} is defined"
    fail_msg: "{{ item }} variable is required"
  loop:
    - {ydb_archive | ydbd_binary}
    - ydb_config
    - ydb_tls_dir

- name: set vars_for_distribution variables
  ansible.builtin.include_vars:
    file: "{{ vars_for_distribution_file }}"
    name: vars_for_distribution

- name: ensure libaio is installed
  ansible.builtin.package:
    name: "{{ vars_for_distribution.libaio_package }}"
    state: present
    cache_valid_time: "{{ apt_cache_valid_time | default(3600) }}"
    update_cache: "{{ apt_update_cache | default(True) }}"
  timeout: 300

- name: install custom libidn from archive
  import_tasks:
    file: install_libidn_from_archive.yaml
  when: ydb_libidn_archive is defined

- name: create certs group
  group:
    name: certs
    system: true

- name: create ydb group
  group:
    name: ydb
    system: true

- name: create ydb user
  user:
    name: ydb
    group: ydb
    groups: [disk, certs]
    system: true
    create_home: true
    home: "{{ ydb_dir }}/home"
    comment: "YDB Service Account"

- name: install YDB server and cli binaries
  block:
  - name: install YDB server binary package from archive
    import_tasks:
      file: install_ydb_from_archive.yaml
    when: ydb_archive is defined

  - name: install YDB binaries from files
    import_tasks:
      file: install_ydb_using_binary.yaml
    when: ydbd_binary is defined and ydb_cli_binary is defined

  - name: download and install YDB server binary package from a release version number
    import_tasks:
      file: install_ydb_from_version.yaml
    when: ydb_version is defined

  - name: install YDB server binary package from source code
    import_tasks:
      file: install_ydb_from_source.yaml
    when: ydb_git_version is defined

- name: create YDB configuration directory
  file:
    path: "{{ ydb_dir }}/cfg"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: create YDB audit directory
  file:
    path: "{{ ydb_dir }}/audit"
    state: directory
    owner: ydb
    group: ydb
    mode: 0700

- name: setup certificates
  block:
    - name: create YDB certs directory
      file:
        path: "{{ ydb_dir }}/certs"
        state: directory
        owner: root
        group: certs
        mode: 0775

    - name: copy the TLS ca.crt
      copy:
        src: "{{ ydb_tls_dir }}/ca.crt"
        dest: "{{ ydb_dir }}/certs/ca.crt"
        owner: root
        group: certs
        mode: 0644

    - name: copy the TLS node.crt
      copy:
        src: "{{ ydb_tls_dir }}/{{ inventory_hostname_short }}/node.crt"
        dest: "{{ ydb_dir }}/certs/node.crt"
        owner: root
        group: certs
        mode: 0644

    - name: copy the TLS node.key
      copy:
        src: "{{ ydb_tls_dir }}/{{ inventory_hostname_short }}/node.key"
        dest: "{{ ydb_dir }}/certs/node.key"
        owner: root
        group: certs
        mode: 0640

    - name: copy the TLS web.pem
      copy:
        src: "{{ ydb_tls_dir }}/{{ inventory_hostname_short }}/web.pem"
        dest: "{{ ydb_dir }}/certs/web.pem"
        owner: root
        group: certs
        mode: 0640

- name: copy configuration file
  copy:
    src: "{{ ydb_config }}"
    dest: "{{ ydb_dir }}/cfg/ydbd-config.yaml"

- name: add configuration file updater script
  template:
    src: update_config_file.sh
    dest: "{{ ydb_dir }}/home/update_config_file.sh"
    mode: 0755
