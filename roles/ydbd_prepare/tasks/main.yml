---
# ydbd installation preparation

- name: Display the distribution type
  ansible.builtin.debug:
    var: ansible_distribution

- name: Ensure libaio1t64 is installed
  ansible.builtin.package:
    name: libaio1t64
    state: present
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('24.04', '>=')

- name: Ensure libaio1 is installed
  ansible.builtin.package:
    name: libaio1
    state: present
  when: (ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('24.04', '<')) or ansible_distribution == 'Debian' or ansible_distribution == 'Astra Linux'

- name: Ensure libaio is installed
  ansible.builtin.package:
    name: libaio
    state: present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'RED'

- name: Ensure acl is installed
  ansible.builtin.package:
    name: acl
    state: present
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian' or ansible_distribution == 'Astra Linux'

- name: Ensure chrony is installed
  ansible.builtin.package:
    name: chrony
    state: present

- name: Ensure chrony is running
  ansible.builtin.systemd:
    enabled: true
    state: started
    name: chronyd

- name: Ensure jq is installed
  ansible.builtin.package:
    name: jq
    state: present

- name: Copy the thp-config.sh script
  copy:
    src: thp-config.sh
    dest: /usr/local/bin/ydbd-thp-config.sh
    owner: root
    group: bin
    mode: '0755'

- name: Generate the THP service files
  template:
    src: thp-service.j2
    dest: "/etc/systemd/system/ydb-hugepages.service"
    owner: root
    group: root
    mode: '0644'

- name: Refresh systemd services configuration
  ansible.builtin.systemd:
    daemon_reload: true

- name: Activate THP
  ansible.builtin.systemd:
    enabled: true
    state: started
    name: ydb-hugepages

- name: Congestion control kernel module setup
  block:
    - name: Ensure kernel-modules-extra is installed on RHEL variants
      ansible.builtin.package:
        name: kernel-modules-extra
        state: present
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'AlmaLinux'
    - name: Build the kernel module customization for congestion control
      template:
        src: network-modules.j2
        dest: /etc/modules-load.d/50-ydbd.conf
        owner: root
        group: root
        mode: '0644'
    - name: Load the {{ ydb_congestion_module }} module
      command: "/sbin/modprobe {{ ydb_congestion_module }}"
  when: ydb_congestion_module is defined

- name: Build the kernel settings adjustments file
  template:
    src: kernel-settings.j2
    dest: /etc/sysctl.d/50-ydbd.conf
    owner: root
    group: root
    mode: '0644'

- name: Refresh the current sysctl settings
  command: "/sbin/sysctl --system"

- name: Create the YDB base directory
  file:
    state: directory
    path: "{{ ydb_dir }}"
    group: bin
    owner: root
    mode: '0755'

- name: Create the ydb group
  group:
    name: ydb
    system: true

- name: Create the ydb user
  user:
    name: ydb
    group: ydb
    groups: disk
    system: true
    create_home: true
    home: "{{ ydb_dir }}/home"
    comment: "YDB Service Account"

- name: Create the Ansible remote_tmp for ydb user
  file:
    path: "{{ ydb_dir }}/home/.ansible/tmp"
    state: directory
    recurse: true
    group: ydb
    owner: ydb
    mode: '0750'

- name: Create the YDB configuration directory
  file:
    state: directory
    path: "{{ ydb_dir }}/cfg"
    group: bin
    owner: root
    mode: '0755'

- name: Create the YDB audit base directory
  file:
    state: directory
    path: "{{ ydb_dir }}/audit"
    group: ydb
    owner: ydb
    mode: '0700'

- name: Create the YDB certs directory
  file:
    state: directory
    path: "{{ ydb_dir }}/certs"
    group: ydb
    owner: ydb
    mode: '0700'

- name: Create the YDB configuration backup directory
  file:
    state: directory
    path: "{{ ydb_dir }}/reserve"
    group: ydb
    owner: ydb
    mode: '0700'

- name: Create the YDB release directory
  file:
    state: directory
    path: "{{ ydb_dir }}/release"
    group: bin
    owner: root
    mode: '0755'

- name: Create the YDB CLI default binary directory
  file:
    state: directory
    path: "{{ ydb_dir }}/home/ydb/bin"
    recurse: true
    group: ydb
    owner: ydb
    mode: '0755'

- name: Disable YDB CLI version checks
  ansible.builtin.copy:
    src: "ydb-cli-config.json"
    dest: "{{ ydb_dir }}/home/ydb/bin/config.json"
    group: ydb
    owner: ydb
    mode: '0644'
