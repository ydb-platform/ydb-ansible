#! /bin/sh
# Create the YDB database.
# Parameters:
# * static node fqdn
# * database name
# * storage pool name
# * initial number of storage groups

set +e
set +u

DB_ENDPOINT=grpcs://"$1":2135
DB_DOMAIN=/{{ ydb_domain }}
CAFILE={{ ydb_dir }}/certs/ca.crt
TOKEN={{ ydb_dir }}/home/ydbd-token-file
PASSFILE={{ ydb_dir }}/certs/secret
DB_NAME="$2"
DB_POOL="$3"
DB_GROUPS="$4"

LD_LIBRARY_PATH={{ ydb_dir }}/lib
export LD_LIBRARY_PATH

PATH={{ ydb_dir }}/bin:$PATH
export PATH

set -e
set -u

if [ -f ${PASSFILE} ]; then
  # Username and password are passed in file for reconfiguration.
  . ${PASSFILE}
  ydb --ca-file ${CAFILE} -e ${DB_ENDPOINT} -d ${DB_DOMAIN} \
    auth get-token -f > ${TOKEN}
else
  # Initial cluster setup with empty password
  ydb --ca-file ${CAFILE} -e ${DB_ENDPOINT} -d ${DB_DOMAIN} \
    --user root --no-password auth get-token -f > ${TOKEN}
fi
trap "rm -f ${TOKEN}" EXIT

TMPLOG=`mktemp /tmp/ydbd.createdb.XXXXXX`
trap "rm -f ${TMPLOG}" EXIT

ydbd --ca-file ${CAFILE} -s ${DB_ENDPOINT} -f ${TOKEN} \
  admin database /{{ ydb_domain }}/${DB_NAME} create ${DB_POOL}:${DB_GROUPS} >>${TMPLOG} 2>&1

# Ensure success, e.g. no error messages even when the exit code is zero.
set +e
if grep -qE '^ERROR: ' ${TMPLOG}; then
  cat ${TMPLOG};
  exit 1
fi
exit 0

# End Of File